# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Create Release

on:
  push:
    # Pattern matched against refs/tags
    tags:        
      - '**' 

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: publish_win_x64
      run: dotnet publish -r win-x64 -c Release --self-contained true &&  tar -czvf ISRORBilling_win-x64.tar.gz -C ./bin/Release/net7.0/win-x64/publish .
    - name: publish_linux_x64
      run: dotnet publish -r linux-x64 -c Release --self-contained true && tar -czvf ISRORBillingr_linux-x64.tar.gz -C ./bin/Release/net7.0/linux-x64/publish .

    - name: Create Release
      uses: ncipollo/release-action@v1
      id: create_release
      with:
        artifacts: "release.tar.gz,foo/*.txt"
        bodyFile: ""
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ISRORBilling_win-x64.tar.gz
        asset_name: ISRORBilling_win-x64.tar.gz
        asset_content_type: application/gzip
    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ISRORBillingr_linux-x64.tar.gz
        asset_name: ISRORBillingr_linux-x64.tar.gz
        asset_content_type: application/gzip
